name: test-and-deploy-app

env:
  "S3_BUCKET_NAME": "elasticbeanstalk-ap-southeast-2-761950595990"
  "EBS_APPLICATION_NAME": "Duerr-NDT"
  "EBS_ENVIRONMENT_NAME": "Duerr-NDT-env-1"
  "AWS_REGION": "ap-southeast-2"
  "DEPLOY_PACKAGE_NAME": "duerr-ndt-laravel-app-${{github.sha}}.zip"
  "NODE_VERSION": 19.7

# Test and deploy the app if tests succeed
on:
  push:
    branches: [ "master" ]

jobs:
  test-and-deploy:

    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: true
      matrix:
        php: [8.1]
        node-version: [16] #Adding version 16 because Amazon Linux 2 cant support higher versions of node

    name: PHP ${{ matrix.php }}

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
    - uses: actions/checkout@v3
    # Zip code first before dependencies are installed for tests
    - name: Zip the repository
      run: zip -r ${{env.DEPLOY_PACKAGE_NAME}} ./ -x *.git*
      
    # Install dependencies needed for test
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Composer Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Install Node Dependencies
      run: npm ci
    - name: Build Node
      run: npm run build --if-present
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite    
    - name: Execute tests (Unit and Feature tests) via Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/pest
      
    # If tests all pass, deploy to AWS Beanstalk
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_IAM_USER_ID}}
        aws-secret-access-key: ${{secrets.AWS_IAM_USER_SECRET}}
        aws-region: ${{env.AWS_REGION}}
        
    - name: Upload Deployment to S3 Bucket
      run: aws s3 cp ${{env.DEPLOY_PACKAGE_NAME}} s3://${{env.S3_BUCKET_NAME}}/
    
    - name: Create new Elastic Beanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
        --application-name ${{env.EBS_APPLICATION_NAME}} \
        --source-bundle S3Bucket="${{env.S3_BUCKET_NAME}}",S3Key="${{env.DEPLOY_PACKAGE_NAME}}" \
        --version-label "ver-${{ github.sha }}" \
        --description "commit-sha-${{ github.sha }}"
      
    - name: Deploy new ElasticBeanstalk Application Version
      run: aws elasticbeanstalk update-environment --environment-name ${{env.EBS_ENVIRONMENT_NAME}} --version-label "ver-${{ github.sha }}"
    
    - name: Print Success Message on Completion
      run: echo "CI/CD pipeline ran successfully"
